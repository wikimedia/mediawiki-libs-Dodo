<?xml version="1.0" encoding="UTF-8"?>
<ruleset>
	<rule ref="./vendor/mediawiki/mediawiki-codesniffer/MediaWiki">
		<exclude name="MediaWiki.Commenting.MissingCovers.MissingCovers" />
		<exclude name="MediaWiki.WhiteSpace.SpaceBeforeSingleLineComment.NewLineComment" />
		<!--
			Excluded this just until next release of
			mediawiki-codesniffer w/ support for 'extraTags'
			property.
		-->
		<exclude name="MediaWiki.Commenting.FunctionAnnotations.UnrecognizedAnnotation" />
	</rule>
	<file>.</file>
	<arg name="encoding" value="UTF-8"/>
	<arg name="extensions" value="php"/>
	<exclude-pattern type="relative">^doc/html/*</exclude-pattern>
	<exclude-pattern type="relative">^.phan/stubs/*</exclude-pattern>
	<exclude-pattern type="relative">^tests/(W3c|Wpt)/*</exclude-pattern>

	<rule ref="MediaWiki.Commenting.FunctionAnnotations">
		<properties>
			<property name="extraTags[]" value="@copydoc" />
		</properties>
	</rule>

	<!-- No globals allowed! -->
	<rule ref="MediaWiki.NamingConventions.ValidGlobalName">
		<properties>
			<property name="allowedPrefixes[]" value="" />
		</properties>
	</rule>
	<rule ref="MediaWiki.NamingConventions.PrefixedGlobalFunctions">
		<properties>
			<property name="allowedPrefixes[]" value="" />
		</properties>
	</rule>

	<!--
		In our implementation code, we use a convention of
		prefixing with an underscore any non-WebIDL defined
		properties/methods/etc.  That makes it clear to a
		reader when we are departing from the spec, and ensures
		that future revisions of the DOM spec don't introduce
		method names that conflict with our implementation.
		These implementation members may need to be public
		to allow their use in other classes, but they should
		all be @internal!
		Only apply these exceptions to src/ code; our tools
		and other code shouldn't need to use underscore prefixes.
	-->
	<rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
		<exclude-pattern>src/*</exclude-pattern>
	</rule>
	<rule ref="PSR2.Methods.MethodDeclaration.Underscore">
		<exclude-pattern>src/*</exclude-pattern>
	</rule>
	<rule ref="MediaWiki.NamingConventions.LowerCamelFunctionsName.FunctionName">
		<exclude-pattern>src/*</exclude-pattern>
	</rule>
	<!-- re-add a version of LowerCamelFunctionsName which is
	     tolerant of leading underscores -->
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName">
		<properties>
			<property name="strict" value="false" />
		</properties>
	</rule>
        <!-- This rule would indent case statements under switch.
             This is a bit of underspecification/flexibility in the
             mediawiki code style; generally speaking either
             indentation style is permitted.  Most of mediawiki-core
             seems to use the extra indentation of case statements,
             while other libraries like remex-html consistently do
             not. -->
<!--	<rule ref="Generic.WhiteSpace.ScopeIndent">-->
<!--		<properties>-->
<!--			<property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG" />-->
<!--			<property name="tabIndent" value="true" />-->
<!--			<property name="indent" type="int" value="4" />-->
<!--		</properties>-->
<!--	</rule>-->
</ruleset>
